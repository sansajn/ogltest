AddOption('--debug-build', action='store_true', dest='debug_build', default=False)

env = Environment()

env.ParseConfig('pkg-config --cflags --libs gl glu glew assimp Magick++')
env.Append(
	CPPPATH=['.'],
	CXXFLAGS=['-std=c++11'],
	LIBS=['pthread', 'boost_system', 'boost_filesystem'])

if GetOption('debug_build'):
	#env['CXX'] = 'clang++'
	env.Append(CXXFLAGS=['-g', '-O0', '-D_DEBUG'])
else:
	env['CXX'] = 'clang++'
	if 'ENV' in env['ENV'] and 'TERM' in env['ENV']:
		env['ENV']['TERM'] = os.environ['TERM']

lib_objs = env.Object([
	'utils.cpp',
	'program.cpp',
	'mesh.cpp',
	'texture.cpp',
	'math.cpp',	
	'input.cpp']);

camera_objs = env.Object(['camera.cpp'])
engine_objs = env.Object(['engine.cpp', 'component.cpp'])

env.Program(['main.cpp', lib_objs])

env.Append(LIBS=['glut'])

env.Program(['test/test_program.cpp', lib_objs])
env.Program(['test/test_mesh.cpp', lib_objs])
env.Program(['test/test_texture.cpp', lib_objs])
env.Program(['test/test_transform.cpp', lib_objs])
env.Program(['test/test_camera.cpp', lib_objs, camera_objs])
env.Program(['test/test_light.cpp', lib_objs, camera_objs])
env.Program(['test/test_renderer.cpp', lib_objs, engine_objs, 'light.cpp'])
env.Program(['test/test_lightcomp.cpp', lib_objs, engine_objs, 'light.cpp'])
env.Program(['test/test_engine.cpp', lib_objs, engine_objs, 'light.cpp'])
env.Program(['test/test_normalmap.cpp', lib_objs, engine_objs, 'light.cpp'])
env.Program(['test/test_parallaxnorm.cpp', lib_objs, engine_objs, 'light.cpp'])

import os

AddOption('--debug-build', action='store_true', dest='debug_build',
	default=False)

env = Environment()

env.ParseConfig('pkg-config --cflags --libs gl glu glew lua5.2 assimp')
env.Append(
	LIBS=['glut', 'pthread', 'boost_system', 'boost_filesystem'],
	CPPPATH=['.', 'libs', 'libs/otr', 'otr', 'resource', 'luatools'],
	CCFLAGS=['-std=c++11'],
)

if GetOption('debug_build'):
	env.Append(CCFLAGS=['-g', '-O0', '-D_DEBUG'])
else:
	env['CXX'] = 'clang++'
	if 'ENV' in env and 'TERM' in env['ENV']:
		env['ENV']['TERM'] = os.environ['TERM']

#core_objs = env.Object(Glob('libs/core/*.cpp'))
#resource_objs = env.Object('resource/resource_manager.cpp')

luatools_objs = env.Object([Glob('libs/luatools/*.cpp'), Glob('luatools/*.cpp')])
scenegraph_objs = env.Object([Glob('libs/otr/scenegraph/*.cpp'), Glob('otr/scenegraph/*.cpp')])
taskgraph_objs = env.Object([Glob('libs/otr/taskgraph/*.cpp'), Glob('otr/taskgraph/*.cpp')])
render_objs = env.Object([Glob('libs/otr/render/*.cpp'), Glob('libs/otr/render/detail/*.cpp'), Glob('otr/render/*.cpp')])
core_objs = env.Object([Glob('libs/otr/core/*.cpp'), Glob('otr/core/*.cpp')])
ui_objs = env.Object(Glob('libs/otr/ui/*.cpp'))
model_objs = env.Object([Glob('otr/resource/*.cpp'), Glob('libs/otr/resource/*.cpp')])

common_objs = [luatools_objs, scenegraph_objs, taskgraph_objs, core_objs, render_objs, ui_objs, model_objs]

resource_objs = env.Object([
	'resource/resource_factory.cpp',
	'resource/resource_manager.cpp',
	'resource/lua_resource_loader.cpp',
	'resource/lua_scenegraph.cpp'])

#env.Program(['main.cpp', resource_objs])
env.Program(['test_resource.cpp', common_objs, resource_objs])


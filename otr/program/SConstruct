import os

AddOption('--debug-build', action='store_true', dest='debug_build',
	default=False)

env = Environment()

env.ParseConfig('pkg-config --cflags --libs gl glu glew')
env.Append(
	CPPPATH=['.', 'libs/otr'],
	LIBS=['glut', 'pthread'],
	CCFLAGS=['-std=c++11'])

env['CXX'] = 'clang++'

if GetOption('debug_build'):
	env.Append(CCFLAGS=['-g', '-O0', '-D_DEBUG'])
else:
	if 'ENV' in env['ENV'] and 'TERM' in env['ENV']:
		env['ENV']['TERM'] = os.environ['TERM']

buffer_objs = env.Object([
	'libs/otr/render/buffer.cpp',
	'libs/otr/render/detail/buffer_cast.cpp',
])

program_objs = env.Object([Glob('render/*.cpp'), Glob('render/detail/*.cpp')])
cpubuffer_objs = env.Object('libs/otr/render/cpubuffer.cpp')
resource_objs = env.Object('libs/otr/resource/resource_manager.cpp')

env.Program(['test_anyvalue.cpp'])
env.Program(['test_basic.cpp', program_objs, buffer_objs])
env.Program(['test_texture.cpp', program_objs, buffer_objs, cpubuffer_objs])
env.Program(['test_texture2d_array.cpp', program_objs, buffer_objs, cpubuffer_objs])

env.Program(['test_resource.cpp', program_objs, buffer_objs, resource_objs])

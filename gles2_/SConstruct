# dependencies:
#    libglfw3-dev (3.2.1, ubuntu 18.04)
#    magick

env = Environment(
	CCFLAGS=['--std=c++17', '-O0', '-g', '-Wall'],
	CPPPATH=['.', 'libs'],
	CPPDEFINES=['GLFW_INCLUDE_ES2', 'GLM_ENABLE_EXPERIMENTAL']
)
env.ParseConfig('pkg-config --cflags --libs glfw3 glesv2 Magick++-im6')

program_objs = env.Object(['gles2/program_gles2.cpp'])

gles2_objs = [
	program_objs,
	env.Object([
		'gles2/mesh_gles2.cpp',
		'gles2/default_shader_gles2.cpp',
		'gles2/texture_gles2.cpp',
		'gles2/texture_loader_gles2.cpp'  # imagemagick dependency
])]

camera_objs = env.Object(['libs/gl/camera.cpp'])

gl_objs = [
	camera_objs,
	env.Object([
	'libs/gl/window.cpp',
	'gl/glfw3_user_input.cpp',
	'gl/glfw3_window.cpp'
])]

env.Program('test/triangle.cpp')
env.Program(['test/test_module.cpp', program_objs])
env.Program(['test/test_program.cpp', program_objs])
env.Program(['test/test_mesh.cpp', gles2_objs])
env.Program(['test/test_camera.cpp', gles2_objs, camera_objs])
env.Program(['test/test_shapes.cpp', gles2_objs, camera_objs])
env.Program(['test/test_window.cpp', gles2_objs, gl_objs])
env.Program(['test/test_texture.cpp', gles2_objs, gl_objs])
env.Program(['test/test_free_look.cpp', gles2_objs, gl_objs])
env.Program(['test/test_user_input.cpp', gles2_objs, gl_objs])
env.Program(['test/test_glfw3.cpp', gles2_objs, gl_objs])
